//TO DO: Build group dashboard pageimport Head from "next/head";
import { useRouter } from "next/router";
import { withIronSessionSsr } from "iron-session/next";
import sessionOptions from "../config/session";
import db from '../db'
import Head from 'next/head';
import Link from "next/link";
import Header from "../components/header";
import Footer from "../components/footer";
import styles from "../styles/memberDetails.module.css"



export const getServerSideProps = withIronSessionSsr (
  async function getServerSideProps({ req, query }) {
    
    const props = {};

    //Get active user session information
    const user = req.session.user;
    if (user) {
      props.user = req.session.user;
      props.isLoggedIn = true;
    } else {
      props.isLoggedIn = false;
    }

    //GET Member/User Info
    const groupId = query.g
    const memberId = query.m

    const activeMember = await db.group.getMemberByUserId(groupId, user._id)
    if (!activeMember) {
        return {
          redirect: {
            permanent: false,
            destination: "/dashboard",
          },
          props:{},
        };
    }
  




    props.groupId = groupId

    const group = await db.group.getGroupById(groupId)
    const groupConverted = JSON.parse(JSON.stringify(group))
    
    if(group !== null){
      props.group = groupConverted
    }

    const member = await db.group.getMemberById(groupId, memberId)
    const memberDetails = JSON.parse(JSON.stringify(member))

    if(memberDetails !== null){
      props.mbrDetails = memberDetails
    }

    const memberInfo = await db.user.getUserInfo(memberDetails.userId)
    const memberUserInfo = JSON.parse(JSON.stringify(memberInfo)) 

    if(memberUserInfo !== null){
      props.mbrUserInfo = memberUserInfo
    }
    
    return { props };
  },
  sessionOptions
);




export default function MemberPage(props) {
  const router = useRouter();
  const menuType = "group"
  const pageTitle = `${props.group.groupName}`

  return (
    <div >
      <Head>
        <title>My Cookie Jar</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header isLoggedIn={props.isLoggedIn} username={props?.user?.username} menu={menuType} pageTitle={pageTitle}  groupId={props.groupId}/>

      <main className={styles.main}>

        <div className={styles.mainContainer}>

          <div>
            <h1 >
              Member Details
            </h1>
          </div>

          <div className={styles.memberInfo}>
            <p> {props.mbrDetails.memberFirstName} {props.mbrDetails.memberLastName}</p>
            <p> Role: {props.mbrDetails.memberRole}</p>

            <a href={`mailto:${props.mbrUserInfo.email}`} style={{ cursor: "pointer", color: "blue", textDecoration: "underline" }} className={styles.navLink}>{props.mbrUserInfo.email}</a> 
           

          </div>

        </div>       
        
      </main>

      <Footer/>

    </div>      
   );         
}

function sendEmail() {

  return (
    <a href={`mailto:ashleyfrank31@gmail.com`}>hi</a>

  ) 

}