import Head from "next/head";
import Footer from "../components/footer";
import Link from "next/link";
import Image from 'next/image';
import { useRouter } from "next/router";
import { useState } from "react";
import { withIronSessionSsr } from "iron-session/next";
import sessionOptions from "../config/session";
import styles from "../styles/login.module.css";


export const getServerSideProps =  withIronSessionSsr(
  async function getServerSideProps({ req }) {
    const user = req.session.user;
    const props = {};
    if (user) {
      props.user = req.session.user;
      props.isLoggedIn = true;
    } else {
      props.isLoggedIn = false;
    }
    return { props };
  },
  sessionOptions
)


export default function Login(props) {

  const router = useRouter();
  const pageTitle = "Sign In";
  const [{ username, password }, setForm] = useState({
    username: "",
    password: "",
  });
  const [error, setError] = useState("");


  function handleChange(e) {
    setForm({ username, password, ...{ [e.target.name]: e.target.value } });
  }


  async function handleLogin(e) {
    e.preventDefault();
    try {
      const res = await fetch("/api/auth/login", {
        method: "POST",
        headers: {
          "content-type": "application/json",
        },
        body: JSON.stringify({ username, password }),
      });
      if (res.status === 200) return router.push("/dashboard");
      const { error: message } = await res.json();
      setError(message);
    } catch (err) {
      console.log(err);
    }
  }


  
  return (
    <div>
      <Head>
        <title>Log In</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>

      <div className={styles.mainContainer}>

        <Image alt="cookie jar logo" src="/cookieJarLogo.png" className={styles.logo} width="3000" height="1928"/>
        
        <h1 className={styles.title}>Account Log In</h1>

          <form onSubmit={handleLogin} className={styles.form}>
            
            <div className={styles.fieldContainer}> 
              <label htmlFor="username">Username: </label>
                <input
                  className={styles.inputBox}
                  type="text"
                  name="username"
                  id="username"
                  onChange={handleChange}
                  value={username}
                />
            </div>
              
            <div className={styles.fieldContainer}>
              <label htmlFor="password">Password: </label>
                <input
                  className={styles.inputBox}
                  type="password"
                  name="password"
                  id="password"
                  onChange={handleChange}
                  value={password}
                />
            </div> 
              
              <button className={styles.button} style={{ cursor: "pointer" }}>Log In</button>

            
            {error && <p>{error}</p>}
          </form>




          <div >
            <Link href="/signup">
              <p className={styles.signUpLink}>Creat an Account</p>
            </Link>
            
          </div>
        



        </div>
    

      </main>

      <Footer/>
    </div>
  );
}
