import Head from "next/head";
import Header from "../components/header";
import Footer from "../components/footer";
import { useRouter } from "next/router";
import { useState } from "react";
import { withIronSessionSsr } from "iron-session/next";
import sessionOptions from "../config/session";
import styles from "../styles/newBooth.module.css";


export const getServerSideProps = withIronSessionSsr (
    async function getServerSideProps({ req, query }) {
  
      const props = {}

        const groupId = query.g
        props.groupId = groupId

  
      //Get user session information
      const user = req.session.user;
      if (user) {
        props.user = req.session.user;
        props.isLoggedIn = true;
      } else {
          return {
            redirect: {
              permanent: false,
              destination: "/",
            },
            props:{},
          };
      }
  
      return { props };
    },
    sessionOptions
);

export default function CreateGroup(props) {
    const router = useRouter();
    const menuType = "group"
    const groupId = props.groupId
    const pageTitle = "New Booth"

    const [
      {
        locationName,
        date,
        time,
        amPM,
        shifts,
        address,
        city,
        state,
        notes
      },

      setForm,
    ] = useState({
      locationName: "",
      date: "",
      time: "",
      amPM: "",
      shifts: "",
      address: "",
      city: "",
      state: "",
      notes: "",
    });
    const [error, setError] = useState("");
  
    function handleChange(e) {
      setForm({
        locationName,
        date,
        time,
        amPM,
        shifts,
        address,
        city,
        state,
        notes,
        ...{ [e.target.name]: e.target.value},
      });
    }
    async function handleCreateAccount(e) {
      e.preventDefault();
    //   if (!groupName) return setError("Must include group name");
    //   if (groupCode !== confirmCode) return setError("Passwords must Match");
  
      try {
        const res = await fetch("/api/booth", {
          method: "POST",
          headers: {
            "content-type": "application/json",
          },
          body: JSON.stringify({
            groupId,
            locationName,
            date,
            time,
            amPM,
            shifts,
            address,
            city,
            state,
            notes,
            }),
        });
        if (res.status === 200) return router.push("/boothList/" + groupId);
        const { error: message } = await res.json();
        setError(message);
      } catch (err) {
        console.log(err);
      }
    }


    return (
      <div >
        <Head>
          <title>Add New Booth</title>
          <meta name="description" content="Generated by create next app" />
        </Head>
  
        <Header isLoggedIn={props.isLoggedIn} username={props?.user?.username} menu={menuType} pageTitle={pageTitle} groupId={props.groupId}/>
  
        <main className={styles.main}> 

        <div className={styles.mainContainer}>
  
          <form
            onSubmit={handleCreateAccount}
          >

            <div className={styles.instructions}> 
              <p style={{textAlign: "center", textWrap: "balance", margin: "10px"}}> Use the form below to enter the details for a new booth. </p>
            </div>
            <div className={styles.formFieldSections}>

              <div className={styles.formFieldcolum}>
                <div className={styles.fieldContainer}>
                  <label htmlFor="locationName">Location Name: </label>
                  <input
                    placeholder="ex: Publix on Beach Blvd"
                    className={styles.inputBox}
                    type="text"
                    name="locationName"
                    id="locationName"
                    onChange={handleChange}
                    value={locationName}
                  />
                </div>
                <div className={styles.fieldContainer}>
                  <label htmlFor="date">Day, Date: </label>
                  <input
                    placeholder="ex: Saturday, 3/26"
                    className={styles.inputBox}
                    type="text"
                    name="date"
                    id="date"
                    onChange={handleChange}
                    value={date}
                  />
                </div>
                <div className={styles.fieldContainer}>
                  <label htmlFor="time">Time Range: </label>
                  <input
                    placeholder="ex: 12:00-2:00"
                    className={styles.inputBox}
                    type="text"
                    name="time"
                    id="time"
                    onChange={handleChange}
                    value={time}
                  /> 
                </div>        
                <div className={styles.fieldContainer}>
                  <label htmlFor="amPM">am/pm: </label>
                  <input
                    placeholder="ex: pm"
                    className={styles.inputBox}
                    type="text"
                    name="amPM"
                    id="amPM"
                    onChange={handleChange}
                    value={amPM}
                  />
                </div>
                <div className={styles.fieldContainer}>
                  <label htmlFor="shifts">Number of Shiifts: </label>
                  <input
                    placeholder="ex: 2"
                    className={styles.inputBox}
                    type="text"
                    name="shifts"
                    id="shifts"
                    onChange={handleChange}
                    value={shifts}
                  />
                </div>
              </div>

              <div className={styles.formFieldcolum}>
                <div className={styles.fieldContainer}>
                  <label htmlFor="address">Street Address: </label>
                  <input
                    placeholder="ex: 12345 Hills Lane"
                    className={styles.inputBox}
                    type="text"
                    name="address"
                    id="address"
                    onChange={handleChange}
                    value={address}
                  />
                </div>
                <div className={styles.fieldContainer}>
                  <label htmlFor="city">City: </label>
                  <input
                    placeholder="ex: Westview"
                    className={styles.inputBox}
                    type="text"
                    name="city"
                    id="city"
                    onChange={handleChange}
                    value={city}
                  />
                </div>
                <div className={styles.fieldContainer}>
                  <label htmlFor="state">State: </label>
                  <input
                    placeholder="ex: FL"
                    className={styles.inputBox}
                    type="text"
                    name="state"
                    id="state"
                    onChange={handleChange}
                    value={state}
                  />
                </div>
                <div className={styles.fieldContainer}>
                  <label htmlFor="notes">Notes: </label>
                  <textarea
                    placeholder="ex: Add any special details needed for this"
                    className={styles.notes}
                    rows="1" 
                    cols="50"
                    type="text"
                    name="notes"
                    id="notes"
                    onChange={handleChange}
                    value={notes}
                  />
                </div>
              </div>

            </div>
            
            
            <div className={styles.buttonContainer}>
              <button className={styles.button}>Submit</button>
              <button className={styles.button}>
                <a href={`/group/${groupId}`}>Cancel</a>
              </button>

            </div>
            
            {error && <p>{error}</p>}

          </form>
         </div> 
        </main>
  
        <Footer/>
      </div>
    );
  }