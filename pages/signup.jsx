import Head from "next/head";
import Footer from "../components/footer";
import { useRouter } from "next/router";
import { useState } from "react";
import Link from "next/link";
import Image from 'next/image';
import styles from "../styles/signup.module.css";
import { withIronSessionSsr } from "iron-session/next";
import sessionOptions from "../config/session";


export const getServerSideProps =  withIronSessionSsr(
  async function getServerSideProps({ req }) {
    const user = req.session.user;
    const props = {};
    if (user) {
      props.user = req.session.user;
      props.isLoggedIn = true;
    } else {
      props.isLoggedIn = false;
    }
    return { props };
  },
  sessionOptions
)



export default function Signup(props) {
  const router = useRouter();
  const pageTitle = "Create Account";
  const [
    { username, password, "confirm-password": confirmPassword, firstName, lastName, email},
    setForm,
  ] = useState({
    username: "",
    password: "",
    "confirm-password": "",
    firstName:"",
    lastName:"",
    email: "",
  });
  const [error, setError] = useState("");

  function handleChange(e) {
    setForm({
      username,
      password,
      "confirm-password": confirmPassword,
      firstName,
      lastName,
      email,
      ...{ [e.target.name]: e.target.value.trim() },
    });
  }
  async function handleCreateAccount(e) {
    e.preventDefault();
    if (!username) return setError("Must include username");
    if (password !== confirmPassword) return setError("Passwords must Match");
    if (!firstName) return setError("Must include your first name");
    if (!lastName) return setError("Must include your last name");
    if (!email) return setError("Must include your email");

    try {
      const res = await fetch("/api/auth/signup", {
        method: "POST",
        headers: {
          "content-type": "application/json",
        },
        body: JSON.stringify({ username, password, firstName, lastName, email }),
      });
      if (res.status === 200) return router.push("/dashboard");
      const { error: message } = await res.json();
      setError(message);
    } catch (err) {
      console.log(err);
    }
  }
  return (
    <div >
      <Head>
        <title>Sign Up</title>
        <meta name="description" content="Generated by create next app" />
      </Head>


      <main className={styles.main}>

        <div className={styles.mainContainer}>

        <Image src="/cookieJarLogo.png" className={styles.logo} width="3000" height="1928"/>


          <h1 className={styles.title}>Create an Account</h1>
          <form onSubmit={handleCreateAccount} className={styles.form}>

            <div className={styles.fieldContainer}>
              <label htmlFor="firstName">First Name: </label>
              <input
                className={styles.inputBox}
                type="text"
                name="firstName"
                id="firstName"
                onChange={handleChange}
                value={firstName}
              />
            </div>
            

            <div className={styles.fieldContainer}>
              <label htmlFor="lastName">Last Name: </label>
              <input
                className={styles.inputBox}
                type="text"
                name="lastName"
                id="lastName"
                onChange={handleChange}
                value={lastName}
              />
            </div>
            
            <div className={styles.fieldContainer}>
              <label htmlFor="email">Email: </label>
              <input
                className={styles.inputBox}
                type="text"
                name="email"
                id="email"
                onChange={handleChange}
                value={email}
              />
            </div>
            
            <div className={styles.fieldContainer}>
              <label htmlFor="username">Username: </label>
              <input
                className={styles.inputBox}
                type="text"
                name="username"
                id="username"
                onChange={handleChange}
                value={username}
              />
            </div>
            
            <div className={styles.fieldContainer}>
              <label htmlFor="password">Password: </label>
              <input
                className={styles.inputBox}
                type="password"
                name="password"
                id="password"
                onChange={handleChange}
                value={password}
              />
            </div>
            
            <div className={styles.fieldContainer}>
              <label htmlFor="confirm-password">Confirm Password: </label>
              <input
                className={styles.inputBox}
                type="password"
                name="confirm-password"
                id="confirm-password"
                onChange={handleChange}
                value={confirmPassword}
              />
            </div>
            

            <button className={styles.button} style={{ cursor: "pointer" }}>Submit</button>

            {error && <p>{error}</p>}
          </form>

          <div>
            <Link href="/login">
              <p className={styles.logInLink}>Login instead?</p>
            </Link>
          </div>

        
        </div>

        
      </main>

      <Footer/>
    </div>
  );
}
